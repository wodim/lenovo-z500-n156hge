# this is a translation of the LVLS function in the DSDT table.
# I wrote it to better understand what it does.


PLVL = [0x46, 0x1E, 0x0A, 0x0F, 0x14, 0x19, 0x1E, 0x23, 0x28, 0x2D, 0x32, 0x37, 0x3C, 0x41, 0x46, 0x50, 0x5A, 0x64]
PLV2 = [0x46, 0x1E,    0,    1, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 0x60, 0x61, 0x62, 0x63, 0x64]


def LVLS(level_from_os, Win8):
    proceed = 1
    offset = 0

    if Win8:
        cutoff = 0x14
        table = PLV2
    else:
        cutoff = 0x0f
        table = PLVL

    while proceed:
        cur_offset = offset + 0x02
        cur_value = table[cur_offset]
        level_from_os_cut = level_from_os & 0xff

        if level_from_os_cut == cur_value:
            proceed = 0

        cur_value = cur_value - 1

        if level_from_os_cut == cur_value:
            proceed = 0

        if offset >= cutoff:
            proceed = 0

        if proceed:
            offset = offset + 1

    return offset


for table, win8 in (PLVL, False), (PLV2, True):
    print('=== Table (%s) ===' % win8)
    for lvl in table:
        print('%s: %s' % (lvl, LVLS(lvl, win8)))
